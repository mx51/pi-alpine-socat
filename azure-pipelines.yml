# This pipeline will trigger on every PR change as well as for new tags
pr:
  autoCancel: true

trigger:
  tags:
    include: ['v*.*.*']

variables:
  - group: global-variables

stages:
- stage: build
  displayName: "Stage: Build and Release"

  jobs:
  - job: Build
    displayName: "Build, Test, Scan, Release"
    pool: shared
    workspace:
      clean: all

    steps:

    - script: toe -a
      displayName: "toe -a"

    - script: tty
      displayName: "tty"

    - script: |
        echo
        echo "Executing tput init ..."
        /usr/bin/tput init
      displayName: "tput init 1"
      condition: always()

    - script: |
        echo
        echo "Executing TERM=vt100 tput init ..."
        TERM=vt100 /usr/bin/tput init
      displayName: "tput init 2"
      condition: always()

    - script: |
        echo
        echo "Executing TERM=vt100 tput init ..."
        TERM=vt100 /usr/bin/tput init
        echo "Before '/usr/bin/tput -T xterm-256color setaf 9' ..."
        /usr/bin/tput -T xterm-256color setaf 9
        echo "After '/usr/bin/tput -T xterm-256color setaf 9'"
      displayName: "tput init 3"
      condition: always()

    - script: |
        echo
        echo "Before '/usr/bin/tput -T xterm-256color setaf 9' ..."
        /usr/bin/tput -T xterm-256color setaf 9
        echo "After '/usr/bin/tput -T xterm-256color setaf 9'"
        echo
      displayName: "tput with xterm-256color"
      condition: always()

    - script: |
        echo
        echo "Before '/usr/bin/tput -Txterm setaf 2' ..."
        /usr/bin/tput -Txterm setaf 2
        echo "After '/usr/bin/tput -Txterm setaf 2'"
        echo
      displayName: "tput with xterm"
      condition: always()

    - script: make build
      displayName: "Build image"
      condition: always()

    - script: make test
      displayName: "Test image"

    - script: make twistscan
      env:
        TWISTLOCK_USER: $(TWISTLOCK_USER)
        TWISTLOCK_PASS: $(TWISTLOCK_PASS)
      displayName: "Scan image"

    - ${{ if startsWith(variables['build.sourceBranch'], 'refs/tags/') }}:
      - script: |
          docker login -u $(DOCKER_HUB_USER) -p $(DOCKER_HUB_PASS)
        env:
          DOCKER_HUB_USER: $(DOCKER_HUB_USER)
          DOCKER_HUB_PASS: $(DOCKER_HUB_PASS)
        displayName: 'DockerHub login'

      - script: make release
        displayName: "Release image"


- ${{ if startsWith(variables['build.sourceBranch'], 'refs/tags/') }}:
  - stage: runtime
    displayName: "Stage: Runtime Test"
    dependsOn: build

    jobs:
    - job: Runtime
      pool: shared
      workspace:
        clean: all

      steps:

      - script: make testruntime
        displayName: "Perform runtime test"
